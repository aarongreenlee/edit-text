var N = null;var searchIndex = {};
searchIndex["build_tools"]={"doc":"","items":[],"paths":[]};
searchIndex["edit_client"]={"doc":"","items":[[0,"log","edit_client","",N,N],[4,"LogWasm","edit_client::log","",N,N],[13,"Setup","","",0,N],[13,"Task","","",0,N],[13,"SyncNew","","",0,N],[13,"SendClient","","",0,N],[13,"SendSync","","",0,N],[13,"Debug","","",0,N],[5,"log_init","","",N,[[["sender",["servercommand"]]],["option",["sender"]]]],[5,"log_send","","",N,[[["str"]]]],[17,"CLIENT_LOG_ID","","",N,N],[17,"CLIENT_LOG_SENDER","","",N,N],[0,"client","edit_client","",N,N],[3,"CaretState","edit_client::client","",N,N],[12,"block","","",1,N],[12,"in_list","","",1,N],[12,"styles","","",1,N],[3,"ActionContext","","",N,N],[12,"doc","","",2,N],[12,"client_id","","",2,N],[3,"ClientDoc","","",N,N],[12,"doc","","",3,N],[12,"version","","",3,N],[12,"client_id","","",3,N],[12,"original_doc","","",3,N],[12,"pending_op","","",3,N],[12,"local_op","","",3,N],[3,"Client","","",N,N],[12,"client_doc","","",4,N],[12,"last_caret_state","","",4,N],[12,"last_controls","","",4,N],[12,"monkey","","",4,N],[12,"alive","","",4,N],[12,"task_count","","",4,N],[4,"StyleOp","","",N,N],[13,"AddStyle","","",5,N],[13,"RemoveStyle","","",5,N],[4,"Task","","",N,N],[13,"ClientCommand","","",6,N],[13,"ControllerCommand","","",6,N],[5,"init_caret","","",N,[[["actioncontext"]],["result",["op","error"]]]],[5,"caret_move","","Arrow keys move the caret.",N,[[["actioncontext"],["bool"],["bool"]],["result",["op","error"]]]],[5,"caret_word_move","","",N,[[["actioncontext"],["bool"],["bool"]],["result",["op","error"]]]],[5,"caret_select_all","","",N,[[["actioncontext"]],["result",["op","error"]]]],[5,"caret_block_move","","",N,[[["actioncontext"],["bool"]],["result",["op","error"]]]],[5,"caret_clear_inner","","",N,[[["walker"]],["result",["op","error"]]]],[5,"caret_clear","","",N,[[["actioncontext"],["pos"]],["result",["op","error"]]]],[5,"cur_to_caret","","",N,[[["actioncontext"],["curspan"],["pos"]],["result",["op","error"]]]],[5,"identify_styles","","",N,[[["actioncontext"]],["result",["styleset","error"]]]],[5,"identify_block","","",N,[[["actioncontext"]],["result",["caretstate","error"]]]],[5,"add_string","","",N,[[["actioncontext"],["str"]],["result",["actioncontext","error"]]]],[5,"toggle_list","","",N,[[["actioncontext"]],["result",["op","error"]]]],[5,"replace_block","","Replaces the current block with a new block.",N,[[["actioncontext"],["attrs"]],["result",["op","error"]]]],[5,"delete_char","","Backspace.",N,[[["actioncontext"]],["result",["op","error"]]]],[5,"split_block","","",N,[[["actioncontext"],["bool"]],["result",["op","error"]]]],[5,"apply_style","","",N,[[["actioncontext"],["rtfstyle"],["option",["string"]]],["result",["op","error"]]]],[5,"remove_styles","","",N,[[["actioncontext"],["styleset"]],["result",["op","error"]]]],[5,"restyle","","",N,[[["actioncontext"],["vec",["styleop"]]],["result",["op","error"]]]],[5,"button_handlers","","",N,N],[11,"new","","",2,[[["doc",["rtfschema"]],["string"]],["actioncontext"]]],[11,"apply","","",2,[[["self"],["op"]],["result",["actioncontext","error"]]]],[11,"get_walker","","",2,[[["self"],["pos"]],["result",["walker","error"]]]],[11,"result","","",2,[[["self"]],["op",["rtfschema"]]]],[11,"new","","",3,[[["string"]],["clientdoc"]]],[11,"init","","Overwrite current state",3,[[["self"],["doc"],["usize"]]]],[11,"sync_confirmed_pending_op","","Sync ACK'd our pending operation. Returns the next op to send to sync, if any.",3,[[["self"],["doc"],["usize"]],["option",["op"]]]],[11,"sync_sent_new_version","","Sync gave us an operation not originating from us.",3,N],[11,"next_payload","","When there are no payloads queued, queue a next one.",3,[[["self"]],["option",["op"]]]],[11,"apply_local_op","","An operation was applied to the document locally.",3,[[["self"],["op"]]]],[8,"ClientController","","Trait shared by the \"wasm\" and \"client proxy\" implementations. Most methods are implemented on this trait, not its implementors.",N,N],[10,"state","","",7,[[["self"]],["refmut",["client"]]]],[10,"send_frontend","","",7,[[["self"],["frontendcommand"]],["result",["error"]]]],[10,"send_server","","",7,[[["self"],["servercommand"]],["result",["error"]]]],[11,"setup_controls","","",7,[[["self"],["option",["caretstate"]]]]],[11,"handle_task","","",7,[[["self"],["task"]],["result",["error"]]]],[11,"upload","","",7,[[["self"],["op",["rtfschema"]]],["result",["error"]]]],[11,"with_action_context","","",7,[[["self"],["c"]],["result",["error"]]]],[11,"client_op","","",7,[[["self"],["c"]],["result",["error"]]]],[0,"monkey","edit_client","",N,N],[3,"Scheduler","edit_client::monkey","",N,N],[5,"setup_monkey","","",N,[[["scheduler"]]]],[6,"MonkeyParam","","",N,N],[17,"MONKEY_BUTTON","","",N,N],[17,"MONKEY_LETTER","","",N,N],[17,"MONKEY_ARROW","","",N,N],[17,"MONKEY_BACKSPACE","","",N,N],[17,"MONKEY_ENTER","","",N,N],[17,"MONKEY_CLICK","","",N,N],[11,"new","","",8,[[["sender",["task"]],["arc",["atomicbool"]],["arc",["atomicbool"]]],["self"]]],[11,"schedule_random","","",8,N],[0,"random","edit_client","",N,N],[3,"RandomCursorContext","edit_client::random","",N,N],[5,"random_cursor_span","","",N,[[["randomcursorcontext"],["docspan"]],["result",["error"]]]],[5,"random_cursor","","",N,[[["doc"]],["result",["vec","error"]]]],[0,"walkers","edit_client","",N,N],[3,"CaretStepper","edit_client::walkers","",N,N],[12,"doc","","",9,N],[12,"caret_pos","","",9,N],[3,"ReverseCaretStepper","","",N,N],[12,"doc","","",10,N],[12,"caret_pos","","",10,N],[3,"Walker","","",N,N],[12,"stepper","","",11,N],[4,"Pos","","",N,N],[13,"Start","","",12,N],[13,"Anchor","","",12,N],[13,"Focus","","",12,N],[13,"End","","",12,N],[5,"is_block","","",N,[[["attrs"]],["bool"]]],[5,"is_block_object","","",N,[[["attrs"]],["bool"]]],[5,"is_caret","","",N,[[["attrs"],["option",["str"]],["bool"]],["bool"]]],[5,"is_any_caret","","",N,[[["attrs"]],["bool"]]],[11,"new","","",9,[[["docstepper",["rtfschema"]]],["caretstepper"]]],[11,"rev","","",9,[[["self"]],["reversecaretstepper"]]],[11,"is_valid_caret_pos","","",9,[[["self"]],["bool"]]],[11,"skip_element","","",9,[[["self"]],["option"]]],[11,"rev","","",10,[[["self"]],["caretstepper"]]],[11,"is_valid_caret_pos","","",10,[[["self"]],["bool"]]],[11,"new","","",11,[[["doc"]],["walker"]]],[11,"doc","","",11,[[["self"]],["docstepper"]]],[11,"goto_pos","","",11,[[["self"],["isize"]],["bool"]]],[11,"goto_end","","",11,[[["self"]]]],[11,"to_caret","","",11,[[["doc"],["str"],["pos"]],["result",["walker","error"]]]],[11,"to_cursor","","",11,[[["doc"],["curspan"]],["walker"]]],[11,"parent","","",11,[[["self"]],["bool"]]],[11,"back_block_or_block_object","","",11,[[["self"]],["bool"]]],[11,"at_start_of_block","","",11,[[["self"]],["bool"]]],[11,"back_block","","",11,[[["self"]],["bool"]]],[11,"next_block","","",11,[[["self"]],["bool"]]],[11,"next_char","","",11,[[["self"]]]],[11,"back_char","","",11,[[["self"]]]],[11,"delta","","",11,[[["self"],["self"]],["option",["isize"]]]],[11,"to_writer","","",11,[[["self"]],["opwriter",["rtfschema"]]]],[11,"stepper","","",11,[[["self"]],["docstepper"]]],[0,"proxy","edit_client","",N,N],[3,"ProxyClientController","edit_client::proxy","",N,N],[12,"state","","",13,N],[12,"tx_client","","",13,N],[12,"tx_sync","","",13,N],[14,"log_wasm","edit_client","",N,N],[11,"into","edit_client::log","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","edit_client::client","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","edit_client::monkey","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","edit_client::random","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","edit_client::walkers","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","edit_client::proxy","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"state","","",13,[[["self"]],["refmut",["client"]]]],[11,"send_frontend","","",13,[[["self"],["frontendcommand"]],["result",["error"]]]],[11,"send_server","","",13,[[["self"],["servercommand"]],["result",["error"]]]],[11,"next","edit_client::walkers","",9,[[["self"]],["option"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"default","edit_client::random","",14,[[],["self"]]],[11,"eq","edit_client::walkers","",12,[[["self"],["pos"]],["bool"]]],[11,"clone","edit_client::log","",0,[[["self"]],["logwasm"]]],[11,"clone","edit_client::client","",1,[[["self"]],["caretstate"]]],[11,"clone","","",2,[[["self"]],["actioncontext"]]],[11,"clone","","",6,[[["self"]],["task"]]],[11,"clone","edit_client::walkers","",12,[[["self"]],["pos"]]],[11,"clone","","",9,[[["self"]],["caretstepper"]]],[11,"clone","","",10,[[["self"]],["reversecaretstepper"]]],[11,"clone","","",11,[[["self"]],["walker"]]],[11,"fmt","edit_client::log","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_client::client","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_client::walkers","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"serialize","edit_client::log","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","edit_client::client","",6,[[["self"],["__s"]],["result"]]],[11,"deserialize","edit_client::log","",0,[[["__d"]],["result"]]],[11,"deserialize","edit_client::client","",6,[[["__d"]],["result"]]]],"paths":[[4,"LogWasm"],[3,"CaretState"],[3,"ActionContext"],[3,"ClientDoc"],[3,"Client"],[4,"StyleOp"],[4,"Task"],[8,"ClientController"],[3,"Scheduler"],[3,"CaretStepper"],[3,"ReverseCaretStepper"],[3,"Walker"],[4,"Pos"],[3,"ProxyClientController"],[3,"RandomCursorContext"]]};
searchIndex["edit_client_proxy"]={"doc":"","items":[[3,"ProxySocket","edit_client_proxy","",N,N],[5,"main","","",N,[[]]],[5,"server","","",N,[[["str"],["u16"]]]],[5,"start_websocket_server","","",N,[[["u16"]]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"initialize","","",0,[[["u16"],["str"],["arc",["mutex"]]],["result",["proxysocket","error"]]]],[11,"handle_message","","",0,N],[11,"cleanup","","",0,[[["self"]],["result",["error"]]]]],"paths":[[3,"ProxySocket"]]};
searchIndex["edit_common"]={"doc":"","items":[[5,"doc_as_html","edit_common","Converts a DocSpan to an HTML string.",N,[[["docspan"]],["string"]]],[0,"commands","","",N,N],[3,"Controls","edit_common::commands","",N,N],[12,"keys","","",0,N],[12,"buttons","","",0,N],[4,"ServerCommand","","",N,N],[13,"Commit","","",1,N],[13,"Log","","",1,N],[13,"TerminateProxy","","",1,N],[4,"ClientCommand","","",N,N],[13,"Init","","",2,N],[13,"Update","","",2,N],[13,"ServerDisconnect","","",2,N],[4,"ControllerCommand","","",N,N],[13,"Keypress","","",3,N],[12,"key_code","edit_common::commands::ControllerCommand","",3,N],[12,"meta_key","","",3,N],[12,"shift_key","","",3,N],[12,"alt_key","","",3,N],[13,"Button","edit_common::commands","",3,N],[12,"button","edit_common::commands::ControllerCommand","",3,N],[13,"Character","edit_common::commands","",3,N],[12,"char_code","edit_common::commands::ControllerCommand","",3,N],[13,"InsertText","edit_common::commands","",3,N],[12,"text","edit_common::commands::ControllerCommand","",3,N],[13,"RenameGroup","edit_common::commands","",3,N],[12,"tag","edit_common::commands::ControllerCommand","",3,N],[12,"curspan","","",3,N],[13,"Cursor","edit_common::commands","",3,N],[12,"focus","edit_common::commands::ControllerCommand","",3,N],[12,"anchor","","",3,N],[13,"RandomTarget","edit_common::commands","",3,N],[12,"position","edit_common::commands::ControllerCommand","",3,N],[13,"Monkey","edit_common::commands","",3,N],[12,"enabled","edit_common::commands::ControllerCommand","",3,N],[4,"FrontendCommand","edit_common::commands","",N,N],[13,"Init","","",4,N],[13,"Controls","","",4,N],[13,"PromptString","","",4,N],[13,"RenderDelta","","",4,N],[13,"RenderFull","","",4,N],[13,"Error","","",4,N],[13,"ServerCommand","","",4,N],[13,"ServerDisconnect","","",4,N],[4,"Ui","","",N,N],[13,"Button","","",5,N],[13,"ButtonGroup","","",5,N],[0,"markdown","edit_common","",N,N],[0,"de","edit_common::markdown","",N,N],[5,"markdown_to_doc","edit_common::markdown::de","",N,[[["str"]],["result",["docspan","error"]]]],[0,"ser","edit_common::markdown","",N,N],[5,"doc_to_markdown","edit_common::markdown::ser","",N,[[["docspan"]],["result",["string","error"]]]],[0,"simple_ws","edit_common","An aggressively simple wrapper for `ws`.",N,N],[3,"SocketHandler","edit_common::simple_ws","",N,N],[6,"Sender","","",N,N],[8,"SimpleSocket","","",N,N],[16,"Args","","",6,N],[10,"initialize","","",6,N],[10,"handle_message","","",6,N],[10,"cleanup","","",6,[[["self"]],["result",["error"]]]],[11,"new","","",7,N],[11,"into","edit_common::commands","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","edit_common::simple_ws","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"on_message","","",7,[[["self"],["message"]],["result",["error"]]]],[11,"eq","edit_common::commands","",1,[[["self"],["servercommand"]],["bool"]]],[11,"ne","","",1,[[["self"],["servercommand"]],["bool"]]],[11,"eq","","",2,[[["self"],["clientcommand"]],["bool"]]],[11,"ne","","",2,[[["self"],["clientcommand"]],["bool"]]],[11,"eq","","",3,[[["self"],["controllercommand"]],["bool"]]],[11,"ne","","",3,[[["self"],["controllercommand"]],["bool"]]],[11,"eq","","",4,[[["self"],["frontendcommand"]],["bool"]]],[11,"ne","","",4,[[["self"],["frontendcommand"]],["bool"]]],[11,"eq","","",5,[[["self"],["ui"]],["bool"]]],[11,"ne","","",5,[[["self"],["ui"]],["bool"]]],[11,"eq","","",0,[[["self"],["controls"]],["bool"]]],[11,"ne","","",0,[[["self"],["controls"]],["bool"]]],[11,"clone","","",1,[[["self"]],["servercommand"]]],[11,"clone","","",2,[[["self"]],["clientcommand"]]],[11,"clone","","",3,[[["self"]],["controllercommand"]]],[11,"clone","","",4,[[["self"]],["frontendcommand"]]],[11,"clone","","",5,[[["self"]],["ui"]]],[11,"clone","","",0,[[["self"]],["controls"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"on_open","edit_common::simple_ws","",7,[[["self"],["handshake"]],["result",["error"]]]],[11,"on_message","","",7,[[["self"],["message"]],["result",["error"]]]],[11,"on_error","","",7,[[["self"],["error"]]]],[11,"on_close","","",7,[[["self"],["closecode"],["str"]]]],[11,"on_shutdown","","",7,[[["self"]]]],[11,"on_timeout","","",7,[[["self"],["token"]],["result"]]],[11,"on_new_timeout","","",7,[[["self"],["token"],["timeout"]],["result"]]],[11,"on_frame","","",7,[[["self"],["frame"]],["result",["option"]]]]],"paths":[[3,"Controls"],[4,"ServerCommand"],[4,"ClientCommand"],[4,"ControllerCommand"],[4,"FrontendCommand"],[4,"Ui"],[8,"SimpleSocket"],[3,"SocketHandler"]]};
searchIndex["edit_replay"]={"doc":"","items":[],"paths":[]};
searchIndex["edit_server"]={"doc":"","items":[[0,"log","edit_server","",N,N],[3,"Logger","edit_server::log","",N,N],[3,"SERVER_LOG_TX","","",N,N],[4,"LogSync","","",N,N],[13,"Launch","","",0,N],[13,"ServerSpawn","","",0,N],[13,"ClientConnect","","",0,N],[13,"ClientPacket","","",0,N],[13,"Debug","","",0,N],[13,"Spawn","","",0,N],[5,"log_sync_init","","",N,[[["dbpool"]],["option",["dbpool"]]]],[11,"log","","",1,N],[0,"carets","edit_server","",N,N],[5,"remove_carets","edit_server::carets","Removes carets from a doc.",N,[[["doc"]],["result",["doc","error"]]]],[5,"remove_carets_op","","Removes carets from a doc. Filter contains the client IDs to remove.",N,[[["doc"],["vec",["string"]]],["result",["op","error"]]]],[0,"db","edit_server","Database connection management.",N,N],[0,"conn","edit_server::db","Methods for creating a database connection and connection pool.",N,N],[5,"db_pool_create","edit_server::db::conn","",N,[[],["dbpool"]]],[5,"db_connection","","",N,[[],["sqliteconnection"]]],[6,"DbPool","","",N,N],[0,"queries","edit_server::db","",N,N],[5,"create_page","edit_server::db::queries","",N,[[["sqliteconnection"],["str"],["doc"]],["usize"]]],[5,"all_posts","","",N,[[["sqliteconnection"]],["hashmap",["string","string"]]]],[5,"get_single_page","","",N,[[["sqliteconnection"],["str"]],["option",["doc"]]]],[5,"get_single_page_raw","","",N,[[["sqliteconnection"],["str"]],["option",["post"]]]],[5,"create_log","","",N,[[["sqliteconnection"],["str"],["str"]],["result",["usize","error"]]]],[5,"all_logs","","",N,[[["sqliteconnection"]],["result",["vec","error"]]]],[5,"select_logs","","",N,[[["sqliteconnection"],["str"]],["result",["vec","error"]]]],[5,"clear_all_logs","","",N,[[["sqliteconnection"]],["result",["usize","error"]]]],[0,"schema","edit_server::db","",N,N],[0,"logs","edit_server::db::schema","",N,N],[3,"table","edit_server::db::schema::logs","The actual table struct",N,N],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",N,N],[0,"columns","","Contains all of the columns of this table",N,N],[3,"star","edit_server::db::schema::logs::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",N,N],[3,"rowid","","",N,N],[3,"source","","",N,N],[3,"body","","",N,N],[6,"SqlType","edit_server::db::schema::logs","The SQL type of all of the columns on this table",N,N],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",N,N],[17,"all_columns","","A tuple of all of the columns on this table",N,N],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",2,[[["self"]],["star"]]],[0,"posts","edit_server::db::schema","",N,N],[3,"table","edit_server::db::schema::posts","The actual table struct",N,N],[0,"dsl","","Re-exports all of the columns of this table, as well as the table struct renamed to the module name. This is meant to be glob imported for functions which only deal with one table.",N,N],[0,"columns","","Contains all of the columns of this table",N,N],[3,"star","edit_server::db::schema::posts::columns","Represents `table_name.*`, which is sometimes needed for efficient count queries. It cannot be used in place of `all_columns`, and has a `SqlType` of `()` to prevent it being used that way",N,N],[3,"id","","",N,N],[3,"body","","",N,N],[6,"SqlType","edit_server::db::schema::posts","The SQL type of all of the columns on this table",N,N],[6,"BoxedQuery","","Helper type for representing a boxed query from this table",N,N],[17,"all_columns","","A tuple of all of the columns on this table",N,N],[11,"star","","Represents `table_name.*`, which is sometimes necessary for efficient count queries. It cannot be used in place of `all_columns`",3,[[["self"]],["star"]]],[0,"types","edit_server::db","",N,N],[3,"Post","edit_server::db::types","",N,N],[12,"id","","",4,N],[12,"body","","",4,N],[3,"NewPost","","",N,N],[12,"id","","",5,N],[12,"body","","",5,N],[3,"Log","","",N,N],[12,"rowid","","",6,N],[12,"source","","",6,N],[12,"body","","",6,N],[3,"NewLog","","",N,N],[12,"source","","",7,N],[12,"body","","",7,N],[0,"graphql","edit_server","GraphQL code.",N,N],[0,"client","edit_server::graphql","",N,N],[5,"get_all_pages_graphql","edit_server::graphql::client","",N,[[],["option",["vec"]]]],[5,"get_single_page_graphql","","",N,[[["str"]],["option",["doc"]]]],[5,"graphql_request","","",N,[[["str"],["value"]],["result",["value","error"]]]],[5,"get_or_create_page_graphql","","",N,[[["str"],["doc"]],["result",["doc","error"]]]],[5,"create_page_graphql","","",N,[[["str"],["doc"]],["option",["doc"]]]],[0,"server","edit_server::graphql","GraphQL server.",N,N],[5,"sync_graphql_server","edit_server::graphql::server","",N,[[["pool",["connectionmanager"]],["ccsender",["clientnotify"]]]]],[0,"state","edit_server","Sync state. This is a candidate file to be moved into Oatie.",N,N],[3,"SyncState","edit_server::state","",N,N],[12,"version","","",8,N],[12,"clients","","",8,N],[12,"history","","",8,N],[12,"doc","","",8,N],[11,"update_operation_to_current","","Transform an operation incrementally against each interim document operation.",8,[[["self"],["op",["rtfschema"]],["usize"],["usize"]],["result",["op","error"]]]],[11,"commit","","",8,[[["self"],["str"],["op",["rtfschema"]],["usize"]],["result",["op","error"]]]],[11,"new","","",8,[[["doc",["rtfschema"]],["usize"]],["syncstate"]]],[0,"sync","edit_server","Synchronization server. Threads for websockets and graphql.",N,N],[3,"ClientNotify","edit_server::sync","",N,N],[12,"0","","",9,N],[12,"1","","",9,N],[3,"PageController","","",N,N],[4,"ClientUpdate","","",N,N],[13,"Connect","","",10,N],[12,"client_id","edit_server::sync::ClientUpdate","",10,N],[12,"out","","",10,N],[13,"Commit","edit_server::sync","",10,N],[12,"client_id","edit_server::sync::ClientUpdate","",10,N],[12,"op","","",10,N],[12,"version","","",10,N],[13,"Disconnect","edit_server::sync","",10,N],[12,"client_id","edit_server::sync::ClientUpdate","",10,N],[13,"Overwrite","edit_server::sync","",10,N],[12,"doc","edit_server::sync::ClientUpdate","",10,N],[5,"default_new_doc","edit_server::sync","",N,[[["str"]],["doc",["rtfschema"]]]],[5,"valid_page_id","","",N,[[["str"]],["bool"]]],[5,"spawn_sync_thread","","Run a sync server thread for a given page ID.",N,[[["string"],["ccreceiver",["clientupdate"]],["doc",["rtfschema"]],["dbpool"]],["result",["error"]]]],[5,"sync_socket_server","","",N,[[["u16"]]]],[14,"log_sync","edit_server","",N,N],[14,"log_raw","","",N,N],[11,"into","edit_server::log","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","edit_server::db::schema::logs","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"join_target","","",2,N],[11,"group_by","","",2,N],[11,"into","edit_server::db::schema::logs::columns","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","edit_server::db::schema::posts","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"join_target","","",3,N],[11,"group_by","","",3,N],[11,"into","edit_server::db::schema::posts::columns","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","edit_server::db::types","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","edit_server::state","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","edit_server::sync","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"default","edit_server::db::schema::logs::columns","",13,[[],["rowid"]]],[11,"default","","",14,[[],["source"]]],[11,"default","","",15,[[],["body"]]],[11,"default","edit_server::db::schema::posts::columns","",17,[[],["id"]]],[11,"default","","",18,[[],["body"]]],[11,"clone","edit_server::log","",0,[[["self"]],["logsync"]]],[11,"clone","edit_server::db::schema::logs","",2,[[["self"]],["table"]]],[11,"clone","edit_server::db::schema::logs::columns","",12,[[["self"]],["star"]]],[11,"clone","","",13,[[["self"]],["rowid"]]],[11,"clone","","",14,[[["self"]],["source"]]],[11,"clone","","",15,[[["self"]],["body"]]],[11,"clone","edit_server::db::schema::posts","",3,[[["self"]],["table"]]],[11,"clone","edit_server::db::schema::posts::columns","",16,[[["self"]],["star"]]],[11,"clone","","",17,[[["self"]],["id"]]],[11,"clone","","",18,[[["self"]],["body"]]],[11,"fmt","edit_server::log","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_server::db::schema::logs","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_server::db::schema::logs::columns","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_server::db::schema::posts","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_server::db::schema::posts::columns","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","edit_server::db::types","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"add","edit_server::db::schema::logs::columns","",13,N],[11,"sub","","",13,N],[11,"mul","","",13,N],[11,"div","","",13,N],[11,"deref","edit_server::log","",11,[[["self"]],["logger"]]],[11,"join_target","edit_server::db::schema::logs","",2,N],[11,"join_target","","",2,N],[11,"join_target","","",2,N],[11,"join_target","","",2,N],[11,"join_target","edit_server::db::schema::posts","",3,N],[11,"join_target","","",3,N],[11,"join_target","","",3,N],[11,"join_target","","",3,N],[11,"table","edit_server::db::schema::logs","",2,N],[11,"table","edit_server::db::schema::posts","",3,N],[11,"build","edit_server::db::types","",4,N],[11,"build","","",6,N],[11,"primary_key","edit_server::db::schema::logs","",2,N],[11,"all_columns","","",2,N],[11,"primary_key","edit_server::db::schema::posts","",3,N],[11,"all_columns","","",3,N],[11,"values","edit_server::db::schema::logs","",2,N],[11,"values","edit_server::db::schema::posts","",3,N],[11,"values","edit_server::db::types","",5,N],[11,"values","","",7,N],[11,"from_clause","edit_server::db::schema::logs","",2,N],[11,"default_selection","","",2,N],[11,"from_clause","edit_server::db::schema::posts","",3,N],[11,"default_selection","","",3,N],[11,"eq_all","edit_server::db::schema::logs::columns","",13,N],[11,"eq_all","","",14,N],[11,"eq_all","","",15,N],[11,"eq_all","edit_server::db::schema::posts::columns","",17,N],[11,"eq_all","","",18,N],[11,"walk_ast","edit_server::db::schema::logs::columns","",12,[[["self"],["astpass"]],["queryresult"]]],[11,"walk_ast","","",13,[[["self"],["astpass"]],["queryresult"]]],[11,"walk_ast","","",14,[[["self"],["astpass"]],["queryresult"]]],[11,"walk_ast","","",15,[[["self"],["astpass"]],["queryresult"]]],[11,"walk_ast","edit_server::db::schema::posts::columns","",16,[[["self"],["astpass"]],["queryresult"]]],[11,"walk_ast","","",17,[[["self"],["astpass"]],["queryresult"]]],[11,"walk_ast","","",18,[[["self"],["astpass"]],["queryresult"]]],[11,"into_update_target","edit_server::db::schema::logs","",2,[[["self"]],["updatetarget"]]],[11,"into_update_target","edit_server::db::schema::posts","",3,[[["self"]],["updatetarget"]]],[11,"as_query","edit_server::db::schema::logs","",2,N],[11,"as_query","edit_server::db::schema::posts","",3,N],[11,"initialize","edit_server::log","",11,[[["self"]]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","edit_server::db::types","",6,[[["self"],["__s"]],["result"]]],[11,"deserialize","edit_server::log","",0,[[["__d"]],["result"]]],[11,"deserialize","edit_server::db::types","",6,[[["__d"]],["result"]]]],"paths":[[4,"LogSync"],[3,"Logger"],[3,"table"],[3,"table"],[3,"Post"],[3,"NewPost"],[3,"Log"],[3,"NewLog"],[3,"SyncState"],[3,"ClientNotify"],[4,"ClientUpdate"],[3,"SERVER_LOG_TX"],[3,"star"],[3,"rowid"],[3,"source"],[3,"body"],[3,"star"],[3,"id"],[3,"body"],[3,"PageController"]]};
searchIndex["edit_server_logs"]={"doc":"","items":[],"paths":[]};
searchIndex["oatie"]={"doc":"Defines types for using operational tranform to modify HTML-like documents.","items":[[0,"macros","oatie","Macros for more easily creating operations and documents in code.",N,N],[0,"wasm","","",N,N],[5,"log","oatie::wasm","",N,[[["str"]]]],[0,"deserialize","oatie","Update legacy serialization formats to a modern format.",N,N],[5,"doc_ron","oatie::deserialize","",N,[[["str"]],["result",["doc","error"]]]],[5,"doc_json","","",N,[[["str"]],["result",["doc","error"]]]],[0,"v1","","Decoding \"v1\" docs, which used an ad-hoc serde format as the data types evolved. There's no specification for this, just compatibility with old code (test cases and database storage).",N,N],[3,"DocString","oatie::deserialize::v1","",N,N],[4,"Style","","",N,N],[13,"Normie","","",0,N],[13,"Bold","","",0,N],[13,"Italic","","",0,N],[13,"Link","","",0,N],[4,"DocElement","","",N,N],[13,"DocGroup","","",1,N],[13,"DocChars","","",1,N],[4,"DelElement","","",N,N],[13,"DelSkip","","",2,N],[13,"DelWithGroup","","",2,N],[13,"DelChars","","",2,N],[13,"DelGroup","","",2,N],[13,"DelStyles","","",2,N],[4,"AddElement","","",N,N],[13,"AddSkip","","",3,N],[13,"AddWithGroup","","",3,N],[13,"AddChars","","",3,N],[13,"AddGroup","","",3,N],[13,"AddStyles","","",3,N],[5,"docspan_ron","","",N,[[["str"]],["result",["docspan","error"]]]],[5,"docspan_json","","",N,[[["str"]],["result",["docspan","error"]]]],[5,"delspan_ron","","",N,[[["str"]],["result",["delspan","error"]]]],[5,"delspan_json","","",N,[[["str"]],["result",["delspan","error"]]]],[5,"addspan_ron","","",N,[[["str"]],["result",["addspan","error"]]]],[5,"addspan_json","","",N,[[["str"]],["result",["addspan","error"]]]],[6,"DocSpan","","",N,N],[6,"DelSpan","","",N,N],[6,"AddSpan","","",N,N],[0,"v2","oatie::deserialize","Decoding \"v2\" docs, which used an ad-hoc serde format as the data types evolved. There's no specification for this, just compatibility with old code (test cases and database storage).",N,N],[3,"DocString","oatie::deserialize::v2","",N,N],[4,"Style","","",N,N],[13,"Normie","","",4,N],[13,"Bold","","",4,N],[13,"Italic","","",4,N],[13,"Link","","",4,N],[4,"DocElement","","",N,N],[13,"DocGroup","","",5,N],[13,"DocChars","","",5,N],[4,"DelElement","","",N,N],[13,"DelSkip","","",6,N],[13,"DelWithGroup","","",6,N],[13,"DelChars","","",6,N],[13,"DelGroup","","",6,N],[13,"DelStyles","","",6,N],[4,"AddElement","","",N,N],[13,"AddSkip","","",7,N],[13,"AddWithGroup","","",7,N],[13,"AddChars","","",7,N],[13,"AddGroup","","",7,N],[13,"AddStyles","","",7,N],[5,"docspan_ron","","",N,[[["str"]],["result",["docspan","error"]]]],[5,"docspan_json","","",N,[[["str"]],["result",["docspan","error"]]]],[5,"delspan_ron","","",N,[[["str"]],["result",["delspan","error"]]]],[5,"delspan_json","","",N,[[["str"]],["result",["delspan","error"]]]],[5,"addspan_ron","","",N,[[["str"]],["result",["addspan","error"]]]],[5,"addspan_json","","",N,[[["str"]],["result",["addspan","error"]]]],[6,"DocSpan","","",N,N],[6,"DelSpan","","",N,N],[6,"AddSpan","","",N,N],[0,"normalize","oatie","",N,N],[5,"normalize","oatie::normalize","",N,[[["op"]],["op"]]],[0,"rtf","oatie","Contains types that define the different groups and styles the document tree can contain. This code should live outside of `oatie`.",N,N],[3,"StyleSet","oatie::rtf","",N,N],[3,"RtfSchema","","",N,N],[4,"Attrs","","",N,N],[13,"Header","","",8,N],[13,"Para","","",8,N],[13,"Code","","",8,N],[13,"Html","","",8,N],[13,"ListItem","","",8,N],[13,"Rule","","",8,N],[13,"Caret","","",8,N],[12,"client_id","oatie::rtf::Attrs","",8,N],[12,"focus","","",8,N],[4,"RtfStyle","oatie::rtf","",N,N],[13,"Bold","","",9,N],[13,"Italic","","",9,N],[4,"RtfTrack","","",N,N],[13,"ListItems","","",10,N],[13,"BlockQuotes","","",10,N],[13,"Blocks","","",10,N],[13,"BlockObjects","","",10,N],[13,"Inlines","","",10,N],[13,"InlineObjects","","",10,N],[11,"new","","",11,[[],["self"]]],[11,"from","","",11,[[["hashset",["rtfstyle"]]],["self"]]],[11,"insert","","",11,[[["self"],["rtfstyle"]]]],[11,"remove","","",11,[[["self"],["rtfstyle"]]]],[11,"contains","","",11,[[["self"],["rtfstyle"]],["bool"]]],[0,"stepper","oatie","Enables stepping through a span operation.",N,N],[3,"NullDocMutator","oatie::stepper","",N,N],[3,"Program","","",N,N],[12,"0","","",12,N],[3,"RecordingDocMutator","","",N,N],[3,"DocStepper","","",N,N],[3,"DelStepper","","",N,N],[12,"head","","",13,N],[12,"rest","","",13,N],[12,"stack","","",13,N],[3,"AddStepper","","",N,N],[12,"head","","",14,N],[12,"rest","","",14,N],[12,"stack","","",14,N],[3,"CurStepper","","",N,N],[12,"rest","","",15,N],[12,"stack","","",15,N],[4,"Bytecode","","",N,N],[13,"Enter","","",16,N],[13,"Exit","","",16,N],[13,"AdvanceElements","","",16,N],[13,"DeleteElements","","",16,N],[13,"InsertDocString","","",16,N],[13,"WrapPrevious","","",16,N],[13,"UnwrapSelf","","",16,N],[13,"JoinTextLeft","","",16,N],[0,"charcursor","","TODO Move this to src/core ?",N,N],[3,"CharCursor","oatie::stepper::charcursor","Indexes into a DocString, tracking two owned DocStrings left() and right() which can be retrieved by reference. Because indexing into the string is performed on DocString internals, this makes scanning a Unicode string much faster than split_at().",N,N],[11,"from_docstring","","",17,N],[11,"from_docstring_end","","",17,N],[11,"update_from_docstring","","",17,N],[11,"style","","",17,N],[11,"left","","",17,[[["self"]],["option",["docstring"]]]],[11,"right","","",17,[[["self"]],["option",["docstring"]]]],[11,"left_element","","",17,[[["self"]],["option",["docelement"]]]],[11,"right_element","","",17,[[["self"]],["option",["docelement"]]]],[11,"value","","",17,[[["self"]],["usize"]]],[11,"index_from_end","","",17,[[["self"]],["usize"]]],[11,"value_add","","",17,[[["self"],["usize"]]]],[11,"value_sub","","",17,[[["self"],["usize"]]]],[11,"new","oatie::stepper","",12,[[],["program"]]],[11,"place","","",12,[[["self"],["bytecode"]]]],[11,"stepper","","",18,[[["self"]],["docstepper"]]],[11,"result","","",18,[[["self"]],["result",["error"]]]],[11,"new","","",18,[[["docstepper"]],["recordingdocmutator"]]],[11,"new","","",19,N],[11,"char_cursor_update","","After an internal method changes what head will return, this method should be called. If head is a string, create a char_cursor on the first character of the string. If head is a group, clear the char_cursor.",19,[[["self"]]]],[11,"char_index","","",19,[[["self"]],["option",["usize"]]]],[11,"char_cursor_expect","","",19,[[["self"]],["charcursor"]]],[11,"raw_index","","",19,N],[11,"parent_attrs","","",19,N],[11,"next","","",19,[[["self"]]]],[11,"prev","","",19,[[["self"]]]],[11,"head","","",19,[[["self"]],["option",["docelement"]]]],[11,"unhead","","",19,[[["self"]],["option",["docelement"]]]],[11,"peek","","",19,[[["self"]],["option",["docelement"]]]],[11,"unskip","","",19,[[["self"],["usize"]]]],[11,"skip","","",19,[[["self"],["usize"]]]],[11,"skip_len","","The number of elements to skip until the end of the current group the stepper is tracking were reached. After that, head() returns None and exit() should be called.",19,[[["self"]],["usize"]]],[11,"at_root","","",19,[[["self"]],["bool"]]],[11,"is_back_done","","",19,[[["self"]],["bool"]]],[11,"is_done","","",19,[[["self"]],["bool"]]],[11,"unenter","","",19,[[["self"]],["self"]]],[11,"enter","","",19,[[["self"]],["self"]]],[11,"unexit","","",19,[[["self"]]]],[11,"exit","","",19,[[["self"]]]],[8,"DocMutator","","",N,N],[11,"flush_chars","","",20,[[["self"]],["bool"]]],[11,"flush","","",20,[[["self"]]]],[11,"Enter","","",20,[[["self"]]]],[11,"Exit","","",20,[[["self"]]]],[11,"AdvanceElements","","TODO rename to advance",20,[[["self"],["usize"]]]],[11,"delete","","",20,[[["self"],["usize"]]]],[11,"DeleteElements","","",20,[[["self"],["usize"]]]],[11,"InsertDocString","","",20,N],[11,"UnwrapSelf","","",20,[[["self"]]]],[11,"WrapPrevious","","",20,N],[11,"skip","","",20,[[["self"],["usize"]]]],[11,"new","","",13,[[["delspan"]],["delstepper"]]],[11,"next","","",13,[[["self"]],["option",["delelement"]]]],[11,"get_head","","",13,[[["self"]],["delelement"]]],[11,"is_done","","",13,[[["self"]],["bool"]]],[11,"enter","","",13,[[["self"]]]],[11,"exit","","",13,[[["self"]]]],[11,"into_span","","",13,[[["self"]],["delspan"]]],[11,"new","","",14,[[["addspan"]],["addstepper"]]],[11,"next","","",14,[[["self"]],["option",["addelement"]]]],[11,"get_head","","",14,[[["self"]],["addelement"]]],[11,"is_done","","",14,[[["self"]],["bool"]]],[11,"into_span","","",14,[[["self"]],["addspan"]]],[11,"enter","","",14,[[["self"]]]],[11,"exit","","",14,[[["self"]]]],[11,"new","","",15,[[["curspan"]],["curstepper"]]],[11,"next","","",15,[[["self"]],["option",["curelement"]]]],[11,"head","","",15,[[["self"]],["option",["curelement"]]]],[11,"is_done","","",15,[[["self"]],["bool"]]],[11,"skip","","",15,[[["self"]]]],[11,"enter","","",15,[[["self"]]]],[11,"exit","","",15,[[["self"]]]],[0,"transform_test","oatie","Helper methods for performing transform tests.",N,N],[5,"run_transform_test","oatie::transform_test","",N,[[["str"]],["result",["error"]]]],[0,"validate","oatie","Validates a document matches a given Schema.",N,N],[3,"ValidateContext","oatie::validate","",N,N],[5,"validate_doc_span","","",N,[[["validatecontext"],["docspan"]],["result",["error"]]]],[5,"validate_doc","","",N,[[["doc"]],["result",["error"]]]],[11,"new","","",21,[[],["validatecontext"]]],[0,"writer","oatie","Classes for generating operation steps (add / del).",N,N],[3,"DelWriter","oatie::writer","",N,N],[12,"past","","",22,N],[3,"AddWriter","","",N,N],[12,"past","","",23,N],[3,"OpWriter","","",N,N],[12,"del","","",24,N],[12,"add","","",24,N],[3,"CurWriter","","",N,N],[12,"past","","",25,N],[3,"DocWriter","","",N,N],[11,"new","","",22,[[],["delwriter"]]],[11,"begin","","",22,[[["self"]]]],[11,"exit","","",22,[[["self"]]]],[11,"close","","",22,[[["self"]]]],[11,"exit_all","","",22,[[["self"]]]],[11,"place","","",22,[[["self"],["delelement"]]]],[11,"place_all","","",22,[[["self"],["delspan"]]]],[11,"result","","",22,[[["self"]],["delspan"]]],[11,"new","","",23,[[],["addwriter"]]],[11,"begin","","",23,[[["self"]]]],[11,"exit","","",23,[[["self"]]]],[11,"close","","",23,N],[11,"exit_all","","",23,[[["self"]]]],[11,"place","","",23,[[["self"],["addelement"]]]],[11,"place_all","","",23,[[["self"],["addspan"]]]],[11,"result","","",23,[[["self"]],["addspan"]]],[11,"exit_result","","",24,[[["self"]],["op"]]],[11,"result","","",24,[[["self"]],["op"]]],[11,"new","","",25,[[],["curwriter"]]],[11,"begin","","",25,[[["self"]]]],[11,"exit","","",25,[[["self"]]]],[11,"exit_all","","",25,[[["self"]]]],[11,"place","","",25,[[["self"],["curelement"]]]],[11,"place_all","","",25,[[["self"],["curspan"]]]],[11,"result","","",25,[[["self"]],["curspan"]]],[11,"new","","",26,[[],["docwriter"]]],[11,"begin","","",26,[[["self"]]]],[11,"close","","",26,N],[11,"place","","",26,[[["self"],["docelement"]]]],[11,"place_all","","",26,[[["self"],["docspan"]]]],[11,"result","","",26,[[["self"]],["result",["docspan","error"]]]],[0,"apply","oatie","Methods to apply an operation to a document.",N,N],[5,"apply_add","oatie::apply","",N,[[["docspan"],["addspan"]],["docspan"]]],[5,"apply_add_bc","","",N,N],[5,"apply_delete","","",N,[[["docspan"],["delspan"]],["docspan"]]],[5,"apply_del_bc","","",N,N],[5,"apply_op_bc","","",N,[[["docspan"],["op"]],["vec",["program"]]]],[5,"apply_operation","","",N,[[["docspan"],["op"]],["docspan"]]],[0,"compose","oatie","Composes two operations together.",N,N],[5,"compose_del_del","oatie::compose","",N,[[["delspan"],["delspan"]],["delspan"]]],[5,"compose_add_add","","",N,[[["addspan"],["addspan"]],["addspan"]]],[5,"compose_add_del","","",N,[[["addspan"],["delspan"]],["op"]]],[5,"compose","","",N,[[["op"],["op"]],["op"]]],[0,"doc","oatie","Defines document types, operation types, and cursor types.",N,N],[3,"DocString","oatie::doc","Abstraction for String that has better performance by restricting its API. It can also be styled using the Style enum.",N,N],[3,"Op","","",N,N],[12,"0","","",27,N],[12,"1","","",27,N],[3,"Doc","","",N,N],[12,"0","","",28,N],[4,"DocElement","","",N,N],[13,"DocText","","",29,N],[13,"DocGroup","","",29,N],[4,"DelElement","","",N,N],[13,"DelSkip","","",30,N],[13,"DelWithGroup","","",30,N],[13,"DelText","","",30,N],[13,"DelGroup","","",30,N],[13,"DelStyles","","",30,N],[4,"AddElement","","",N,N],[13,"AddSkip","","",31,N],[13,"AddWithGroup","","",31,N],[13,"AddText","","",31,N],[13,"AddGroup","","",31,N],[13,"AddStyles","","",31,N],[4,"CurElement","","",N,N],[13,"CurSkip","","",32,N],[13,"CurWithGroup","","",32,N],[13,"CurGroup","","",32,N],[13,"CurChar","","",32,N],[0,"docstring","","",N,N],[3,"DocString","oatie::doc::docstring","Abstraction for String that has better performance by restricting its API. It can also be styled using the Style enum.",N,N],[6,"DocSpan","oatie::doc","",N,N],[6,"DelSpan","","",N,N],[6,"AddSpan","","",N,N],[6,"CurSpan","","",N,N],[8,"DocPlaceable","","",N,N],[10,"skip_len","","",33,[[["self"]],["usize"]]],[10,"place_all","","",33,N],[10,"place","","",33,[[["self"],["docelement"]]]],[8,"DelPlaceable","","",N,N],[10,"place_all","","",34,N],[10,"place","","",34,[[["self"],["delelement"]]]],[10,"skip_pre_len","","",34,[[["self"]],["usize"]]],[10,"skip_post_len","","",34,[[["self"]],["usize"]]],[10,"is_continuous_skip","","Optimization for depth-first code to recursively return skips up the walker.",34,[[["self"]],["bool"]]],[8,"AddPlaceable","","",N,N],[10,"place_all","","",35,N],[10,"place","","",35,[[["self"],["addelement"]]]],[10,"skip_pre_len","","",35,[[["self"]],["usize"]]],[10,"skip_post_len","","",35,[[["self"]],["usize"]]],[10,"is_continuous_skip","","Optimization for depth-first code to recursively return skips up the walker.",35,[[["self"]],["bool"]]],[8,"CurPlaceable","","",N,N],[10,"place_all","","",36,N],[10,"place","","",36,[[["self"],["curelement"]]]],[8,"Track","","",N,N],[10,"do_split","","",37,[[["self"]],["bool"]]],[10,"do_open_split","","",37,[[["self"]],["bool"]]],[10,"supports_text","","",37,[[["self"]],["bool"]]],[10,"allowed_in_root","","",37,[[["self"]],["bool"]]],[10,"is_object","","",37,[[["self"]],["bool"]]],[10,"parents","","",37,[[["self"]],["vec"]]],[10,"ancestors","","",37,[[["self"]],["vec"]]],[8,"Schema","","",N,N],[16,"Track","","",38,N],[16,"GroupProperties","","",38,N],[16,"CharsProperties","","",38,N],[10,"attrs_eq","","Determines if two sets of Attrs are equal.",38,N],[10,"track_type_from_attrs","","Get the track type from this Attrs.",38,N],[10,"merge_attrs","","Combine two Attrs into a new definition.",38,N],[8,"StyleTrait","","",N,N],[16,"Style","","",39,N],[10,"styles","","",39,[[["self"]],["hashset"]]],[10,"is_empty","","",39,[[["self"]],["bool"]]],[10,"extend","","",39,[[["self"],["self"]]]],[10,"remove","","",39,[[["self"],["self"]]]],[8,"OT","","A type that can have operational transform applied to it. The `OT` trait is implemented on an operation object, and its associated type `Doc` is what the operation should operate on.",N,N],[16,"Doc","","",40,N],[10,"apply","","Applies an operation to a `Self::Doc`, returning the modified `Self::Doc`.",40,N],[10,"empty","","Returns an empty operation.",40,[[],["self"]]],[10,"compose","","Composes two operations, returning a single operation encapsulating them both.",40,[[["self"],["self"]],["self"]]],[10,"compose_iter","","Composes an iterator of operations into a single operation. If no operations are returned from the iterator, the Op::empty() should be returned.",40,[[["i"]],["self"]]],[10,"transform","","Transform a document given the corresponding Schema trait.",40,N],[10,"transform_advance","","Utility function to transform an operation against a competing one, returning the results of composing them both.",40,[[["self"],["self"]],["self"]]],[0,"place","oatie","",N,N],[8,"DocPlaceable","oatie::place","",N,N],[10,"skip_len","","",33,[[["self"]],["usize"]]],[10,"place_all","","",33,N],[10,"place","","",33,[[["self"],["docelement"]]]],[8,"DelPlaceable","","",N,N],[10,"place_all","","",34,N],[10,"place","","",34,[[["self"],["delelement"]]]],[10,"skip_pre_len","","",34,[[["self"]],["usize"]]],[10,"skip_post_len","","",34,[[["self"]],["usize"]]],[10,"is_continuous_skip","","Optimization for depth-first code to recursively return skips up the walker.",34,[[["self"]],["bool"]]],[8,"AddPlaceable","","",N,N],[10,"place_all","","",35,N],[10,"place","","",35,[[["self"],["addelement"]]]],[10,"skip_pre_len","","",35,[[["self"]],["usize"]]],[10,"skip_post_len","","",35,[[["self"]],["usize"]]],[10,"is_continuous_skip","","Optimization for depth-first code to recursively return skips up the walker.",35,[[["self"]],["bool"]]],[8,"CurPlaceable","","",N,N],[10,"place_all","","",36,N],[10,"place","","",36,[[["self"],["curelement"]]]],[0,"schema","oatie","",N,N],[8,"Track","oatie::schema","",N,N],[10,"do_split","","",37,[[["self"]],["bool"]]],[10,"do_open_split","","",37,[[["self"]],["bool"]]],[10,"supports_text","","",37,[[["self"]],["bool"]]],[10,"allowed_in_root","","",37,[[["self"]],["bool"]]],[10,"is_object","","",37,[[["self"]],["bool"]]],[10,"parents","","",37,[[["self"]],["vec"]]],[10,"ancestors","","",37,[[["self"]],["vec"]]],[8,"Schema","","",N,N],[16,"Track","","",38,N],[16,"GroupProperties","","",38,N],[16,"CharsProperties","","",38,N],[10,"attrs_eq","","Determines if two sets of Attrs are equal.",38,N],[10,"track_type_from_attrs","","Get the track type from this Attrs.",38,N],[10,"merge_attrs","","Combine two Attrs into a new definition.",38,N],[8,"StyleTrait","","",N,N],[16,"Style","","",39,N],[10,"styles","","",39,[[["self"]],["hashset"]]],[10,"is_empty","","",39,[[["self"]],["bool"]]],[10,"extend","","",39,[[["self"],["self"]]]],[10,"remove","","",39,[[["self"],["self"]]]],[0,"transform","oatie","Performs operational transform on a Doc.",N,N],[5,"transform_insertions","oatie::transform","",N,N],[5,"transform_del_del_inner","","",N,[[["delwriter"],["delwriter"],["delstepper"],["delstepper"]]]],[5,"transform_deletions","","",N,N],[5,"transform_add_del_inner","","",N,[[["delspan"],["addspan"],["addstepper"],["delstepper"]]]],[5,"transform_add_del","","Transforms a insertion preceding a deletion into a deletion preceding an insertion. After this, sequential deletions and insertions can be composed together in one operation.",N,[[["addspan"],["delspan"]],["op"]]],[5,"transform","","Transform two operations according to a schema.",N,N],[8,"Track","","",N,N],[10,"do_split","","",37,[[["self"]],["bool"]]],[10,"do_open_split","","",37,[[["self"]],["bool"]]],[10,"supports_text","","",37,[[["self"]],["bool"]]],[10,"allowed_in_root","","",37,[[["self"]],["bool"]]],[10,"is_object","","",37,[[["self"]],["bool"]]],[10,"parents","","",37,[[["self"]],["vec"]]],[10,"ancestors","","",37,[[["self"]],["vec"]]],[8,"Schema","","",N,N],[16,"Track","","",38,N],[16,"GroupProperties","","",38,N],[16,"CharsProperties","","",38,N],[10,"attrs_eq","","Determines if two sets of Attrs are equal.",38,N],[10,"track_type_from_attrs","","Get the track type from this Attrs.",38,N],[10,"merge_attrs","","Combine two Attrs into a new definition.",38,N],[8,"StyleTrait","","",N,N],[16,"Style","","",39,N],[10,"styles","","",39,[[["self"]],["hashset"]]],[10,"is_empty","","",39,[[["self"]],["bool"]]],[10,"extend","","",39,[[["self"],["self"]]]],[10,"remove","","",39,[[["self"],["self"]]]],[14,"doc","oatie","",N,N],[14,"add_span","","",N,N],[14,"del_span","","",N,N],[14,"op","","",N,N],[11,"into","oatie::doc","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"into","oatie::deserialize::v1","",42,[[["self"]],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","oatie::deserialize::v2","",43,[[["self"]],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","oatie::rtf","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","oatie::stepper","",45,[[["self"]],["u"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","oatie::stepper::charcursor","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","oatie::validate","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","oatie::writer","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"place","oatie","",46,[[["self"],["docelement"]]]],[11,"place_all","","",46,N],[11,"skip_len","","",46,[[["self"]],["usize"]]],[11,"place_all","","",47,N],[11,"place","","",47,[[["self"],["delelement"]]]],[11,"skip_pre_len","","",47,[[["self"]],["usize"]]],[11,"skip_post_len","","",47,[[["self"]],["usize"]]],[11,"is_continuous_skip","","",47,[[["self"]],["bool"]]],[11,"place_all","","",48,N],[11,"place","","",48,[[["self"],["addelement"]]]],[11,"skip_pre_len","","",48,[[["self"]],["usize"]]],[11,"skip_post_len","","",48,[[["self"]],["usize"]]],[11,"is_continuous_skip","","",48,[[["self"]],["bool"]]],[11,"place_all","","",49,N],[11,"place","","",49,[[["self"],["curelement"]]]],[11,"do_split","oatie::rtf","",10,[[["self"]],["bool"]]],[11,"do_open_split","","",10,[[["self"]],["bool"]]],[11,"supports_text","","",10,[[["self"]],["bool"]]],[11,"allowed_in_root","","",10,[[["self"]],["bool"]]],[11,"is_object","","",10,[[["self"]],["bool"]]],[11,"parents","","",10,[[["self"]],["vec"]]],[11,"ancestors","","",10,[[["self"]],["vec"]]],[11,"attrs_eq","","",44,[[["attrs"],["attrs"]],["bool"]]],[11,"merge_attrs","","",44,[[["attrs"],["attrs"]],["option",["attrs"]]]],[11,"track_type_from_attrs","","",44,[[["attrs"]],["option"]]],[11,"styles","","",11,[[["self"]],["hashset"]]],[11,"is_empty","","",11,[[["self"]],["bool"]]],[11,"extend","","",11,[[["self"],["self"]]]],[11,"remove","","",11,[[["self"],["self"]]]],[11,"apply","oatie::doc","",27,N],[11,"empty","","",27,[[],["self"]]],[11,"compose","","",27,[[["self"],["self"]],["self"]]],[11,"compose_iter","","",27,[[["i"]],["self"]]],[11,"transform","","",27,N],[11,"transform_advance","","",27,[[["self"],["self"]],["self"]]],[11,"Enter","oatie::stepper","",45,[[["self"]]]],[11,"Exit","","",45,[[["self"]]]],[11,"AdvanceElements","","TODO rename to advance",45,[[["self"],["usize"]]]],[11,"delete","","",45,[[["self"],["usize"]]]],[11,"DeleteElements","","",45,[[["self"],["usize"]]]],[11,"InsertDocString","","",45,N],[11,"UnwrapSelf","","",45,[[["self"]]]],[11,"WrapPrevious","","",45,N],[11,"skip","","",45,[[["self"],["usize"]]]],[11,"Enter","","",18,[[["self"]]]],[11,"Exit","","",18,[[["self"]]]],[11,"AdvanceElements","","TODO rename to advance",18,[[["self"],["usize"]]]],[11,"delete","","",18,[[["self"],["usize"]]]],[11,"DeleteElements","","",18,[[["self"],["usize"]]]],[11,"InsertDocString","","",18,N],[11,"UnwrapSelf","","",18,[[["self"]]]],[11,"WrapPrevious","","",18,N],[11,"skip","","",18,[[["self"],["usize"]]]],[11,"default","oatie::rtf","",11,[[],["self"]]],[11,"default","oatie::writer","",22,[[],["delwriter"]]],[11,"default","","",23,[[],["addwriter"]]],[11,"default","","",25,[[],["curwriter"]]],[11,"eq","oatie::doc","",27,[[["self"],["op"]],["bool"]]],[11,"ne","","",27,[[["self"],["op"]],["bool"]]],[11,"eq","","",29,[[["self"],["docelement"]],["bool"]]],[11,"ne","","",29,[[["self"],["docelement"]],["bool"]]],[11,"eq","","",28,[[["self"],["doc"]],["bool"]]],[11,"ne","","",28,[[["self"],["doc"]],["bool"]]],[11,"eq","","",30,[[["self"],["delelement"]],["bool"]]],[11,"ne","","",30,[[["self"],["delelement"]],["bool"]]],[11,"eq","","",31,[[["self"],["addelement"]],["bool"]]],[11,"ne","","",31,[[["self"],["addelement"]],["bool"]]],[11,"eq","","",32,[[["self"],["curelement"]],["bool"]]],[11,"ne","","",32,[[["self"],["curelement"]],["bool"]]],[11,"eq","","",41,[[["self"],["docstring"]],["bool"]]],[11,"eq","oatie::deserialize::v1","",0,[[["self"],["style"]],["bool"]]],[11,"eq","oatie::rtf","",8,[[["self"],["attrs"]],["bool"]]],[11,"ne","","",8,[[["self"],["attrs"]],["bool"]]],[11,"eq","","",9,[[["self"],["rtfstyle"]],["bool"]]],[11,"eq","","",11,[[["self"],["styleset"]],["bool"]]],[11,"ne","","",11,[[["self"],["styleset"]],["bool"]]],[11,"eq","","",10,[[["self"],["rtftrack"]],["bool"]]],[11,"eq","","",44,[[["self"],["rtfschema"]],["bool"]]],[11,"eq","oatie::stepper::charcursor","",17,[[["self"],["charcursor"]],["bool"]]],[11,"ne","","",17,[[["self"],["charcursor"]],["bool"]]],[11,"eq","oatie::stepper","",19,[[["self"],["docstepper"]],["bool"]]],[11,"clone","oatie::doc","",27,[[["self"]],["op"]]],[11,"clone","","",29,[[["self"]],["docelement"]]],[11,"clone","","",28,[[["self"]],["doc"]]],[11,"clone","","",30,[[["self"]],["delelement"]]],[11,"clone","","",31,[[["self"]],["addelement"]]],[11,"clone","","",32,[[["self"]],["curelement"]]],[11,"clone","","",41,[[["self"]],["docstring"]]],[11,"clone","oatie::deserialize::v1","",0,[[["self"]],["style"]]],[11,"clone","oatie::rtf","",8,[[["self"]],["attrs"]]],[11,"clone","","",9,[[["self"]],["rtfstyle"]]],[11,"clone","","",11,[[["self"]],["styleset"]]],[11,"clone","","",10,[[["self"]],["rtftrack"]]],[11,"clone","","",44,[[["self"]],["rtfschema"]]],[11,"clone","oatie::stepper::charcursor","",17,[[["self"]],["charcursor"]]],[11,"clone","oatie::stepper","",16,[[["self"]],["bytecode"]]],[11,"clone","","",12,[[["self"]],["program"]]],[11,"clone","","",18,[[["self"]],["recordingdocmutator"]]],[11,"clone","","",19,[[["self"]],["docstepper"]]],[11,"clone","","",13,[[["self"]],["delstepper"]]],[11,"clone","","",14,[[["self"]],["addstepper"]]],[11,"clone","","",15,[[["self"]],["curstepper"]]],[11,"clone","oatie::validate","",21,[[["self"]],["validatecontext"]]],[11,"clone","oatie::writer","",22,[[["self"]],["delwriter"]]],[11,"clone","","",23,[[["self"]],["addwriter"]]],[11,"clone","","",25,[[["self"]],["curwriter"]]],[11,"clone","","",26,[[["self"]],["docwriter"]]],[11,"fmt","oatie::rtf","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","oatie::doc","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","oatie::deserialize::v1","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","oatie::rtf","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","oatie::stepper::charcursor","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","oatie::stepper","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","oatie::writer","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"hash","oatie::deserialize::v1","",0,N],[11,"hash","oatie::rtf","",9,N],[11,"serialize","oatie::doc","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"serialize","","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",41,[[["self"],["s"]],["result"]]],[11,"serialize","oatie::rtf","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["s"]],["result"]]],[11,"serialize","","",44,[[["self"],["__s"]],["result"]]],[11,"serialize","oatie::stepper","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"deserialize","oatie::doc","",27,[[["__d"]],["result"]]],[11,"deserialize","","",29,[[["__d"]],["result"]]],[11,"deserialize","","",28,[[["__d"]],["result"]]],[11,"deserialize","","",30,[[["__d"]],["result"]]],[11,"deserialize","","",31,[[["__d"]],["result"]]],[11,"deserialize","","",32,[[["__d"]],["result"]]],[11,"deserialize","","",41,[[["d"]],["result",["docstring"]]]],[11,"deserialize","oatie::deserialize::v1","",0,[[["__d"]],["result"]]],[11,"deserialize","","",42,[[["d"]],["result",["docstring"]]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","oatie::deserialize::v2","",4,[[["__d"]],["result"]]],[11,"deserialize","","",43,[[["d"]],["result",["docstring"]]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","oatie::rtf","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["d"]],["result"]]],[11,"deserialize","","",44,[[["__d"]],["result"]]],[11,"deserialize","oatie::stepper","",16,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"from_string","oatie::doc","",41,[[["string"]],["docstring"]]],[11,"from_str","","",41,[[["str"]],["docstring"]]],[11,"as_str","","",41,[[["self"]],["str"]]],[11,"push_str","","",41,[[["self"],["str"]]]],[11,"split_at","","",41,N],[11,"seek_start_forward","","",41,[[["self"],["usize"]]]],[11,"seek_start_backward","","",41,[[["self"],["usize"]]]],[11,"try_byte_range","","",41,[[["self"]],["option",["range"]]]],[11,"byte_range_mut","","",41,[[["self"]],["range"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"is_empty","","",41,[[["self"]],["bool"]]],[11,"into_string","","",41,[[["self"]],["string"]]],[11,"char_len","","",41,[[["self"]],["usize"]]],[11,"flush_chars","oatie::stepper","",20,[[["self"]],["bool"]]],[11,"flush","","",20,[[["self"]]]],[11,"Enter","","",20,[[["self"]]]],[11,"Exit","","",20,[[["self"]]]],[11,"AdvanceElements","","TODO rename to advance",20,[[["self"],["usize"]]]],[11,"delete","","",20,[[["self"],["usize"]]]],[11,"DeleteElements","","",20,[[["self"],["usize"]]]],[11,"InsertDocString","","",20,N],[11,"UnwrapSelf","","",20,[[["self"]]]],[11,"WrapPrevious","","",20,N],[11,"skip","","",20,[[["self"],["usize"]]]]],"paths":[[4,"Style"],[4,"DocElement"],[4,"DelElement"],[4,"AddElement"],[4,"Style"],[4,"DocElement"],[4,"DelElement"],[4,"AddElement"],[4,"Attrs"],[4,"RtfStyle"],[4,"RtfTrack"],[3,"StyleSet"],[3,"Program"],[3,"DelStepper"],[3,"AddStepper"],[3,"CurStepper"],[4,"Bytecode"],[3,"CharCursor"],[3,"RecordingDocMutator"],[3,"DocStepper"],[8,"DocMutator"],[3,"ValidateContext"],[3,"DelWriter"],[3,"AddWriter"],[3,"OpWriter"],[3,"CurWriter"],[3,"DocWriter"],[3,"Op"],[3,"Doc"],[4,"DocElement"],[4,"DelElement"],[4,"AddElement"],[4,"CurElement"],[8,"DocPlaceable"],[8,"DelPlaceable"],[8,"AddPlaceable"],[8,"CurPlaceable"],[8,"Track"],[8,"Schema"],[8,"StyleTrait"],[8,"OT"],[3,"DocString"],[3,"DocString"],[3,"DocString"],[3,"RtfSchema"],[3,"NullDocMutator"],[6,"DocSpan"],[6,"DelSpan"],[6,"AddSpan"],[6,"CurSpan"]]};
searchIndex["oatie_transform"]={"doc":"","items":[],"paths":[]};
initSearch(searchIndex);
